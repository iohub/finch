# This is used by GYP to generate platform-specific project files for building
# Finch. (I.e. on a Mac it will create an XCode project, on Linux a makefile.)
# See README for more.

{
  'xcode_settings': {
    'GCC_ENABLE_CPP_EXCEPTIONS': 'NO', # -fno-exceptions
    'GCC_ENABLE_CPP_RTTI': 'NO', # -fno-rtti
    'GCC_TREAT_WARNINGS_AS_ERRORS': 'YES',    # -Werror
    'GCC_WARN_CHECK_SWITCH_STATEMENTS': 'YES', # -Wswitch
    'WARNING_CFLAGS': [
      '-Wall',
      '-W',
      '-Wno-unused-parameter',
      '-Wnon-virtual-dtor',
    ],
  },
  'configurations': {
    'Debug': {
      'cflags': [ '-g', '-O0' ],
      'defines': [ 'DEBUG' ],
      'xcode_settings': {
        'GCC_OPTIMIZATION_LEVEL': '0',
      },
    },
    'Release': {
      'cflags': [ '-O3' ],
      'xcode_settings': {
        'GCC_OPTIMIZATION_LEVEL': '3',
      },
    },
  },
  'target_defaults': {
    'default_configuration': 'Debug',
    'configurations': {
      'Debug': {
      },
      'Release': {
      },
    },
    'include_dirs': [
      'src',
      'src/Base',
      'src/Syntax',
      'src/Compiler',
      'src/Interpreter',
      'src/Interpreter/Objects',
      'src/Syntax/AST',
      'src/Interpreter/Primitives'
    ],
    'sources': [
      'src/Base/Array.h',
      'src/Base/Dictionary.h',
      'src/Base/FinchString.cpp',
      'src/Base/FinchString.h',
      'src/Base/Macros.h',
      'src/Base/Queue.h',
      'src/Base/Ref.h',
      'src/Base/Stack.h',
      'src/Base/StringTable.cpp',
      'src/Base/StringTable.h',
      'src/Compiler/Block.cpp',
      'src/Compiler/Block.h',
      'src/Compiler/Compiler.cpp',
      'src/Compiler/Compiler.h',
      'src/finch.1',
      'src/IErrorReporter.h',
      'src/IInterpreterHost.h',
      'src/Interpreter/ArgReader.h',
      'src/Interpreter/Fiber.cpp',
      'src/Interpreter/Fiber.h',
      'src/Interpreter/FileLineReader.cpp',
      'src/Interpreter/FileLineReader.h',
      'src/Interpreter/Objects/ArrayObject.h',
      'src/Interpreter/Objects/BlockObject.h',
      'src/Interpreter/Objects/BlockObject.cpp',
      'src/Interpreter/Objects/DynamicObject.cpp',
      'src/Interpreter/Objects/DynamicObject.h',
      'src/Interpreter/Objects/FiberObject.h',
      'src/Interpreter/Objects/NumberObject.h',
      'src/Interpreter/Objects/Object.cpp',
      'src/Interpreter/Objects/Object.h',
      'src/Interpreter/Objects/StringObject.h',
      'src/Interpreter/Primitives/ArrayPrimitives.cpp',
      'src/Interpreter/Primitives/ArrayPrimitives.h',
      'src/Interpreter/Primitives/BlockPrimitives.cpp',
      'src/Interpreter/Primitives/BlockPrimitives.h',
      'src/Interpreter/Primitives/FiberPrimitives.cpp',
      'src/Interpreter/Primitives/FiberPrimitives.h',
      'src/Interpreter/Primitives/IoPrimitives.cpp',
      'src/Interpreter/Primitives/IoPrimitives.h',
      'src/Interpreter/Primitives/NumberPrimitives.cpp',
      'src/Interpreter/Primitives/NumberPrimitives.h',
      'src/Interpreter/Primitives/ObjectPrimitives.cpp',
      'src/Interpreter/Primitives/ObjectPrimitives.h',
      'src/Interpreter/Primitives/StringPrimitives.cpp',
      'src/Interpreter/Primitives/StringPrimitives.h',
      'src/Interpreter/Primitives.cpp',
      'src/Interpreter/Primitives.h',
      'src/Interpreter/Upvalue.cpp',
      'src/Interpreter/Upvalue.h',
      'src/Interpreter.cpp',
      'src/Interpreter.h',
      'src/ReplLineReader.cpp',
      'src/ReplLineReader.h',
      'src/StandaloneInterpreterHost.cpp',
      'src/StandaloneInterpreterHost.h',
      'src/Syntax/AST/ArrayExpr.h',
      'src/Syntax/AST/BindExpr.h',
      'src/Syntax/AST/BlockExpr.h',
      'src/Syntax/AST/DefineExpr.h',
      'src/Syntax/AST/Expr.cpp',
      'src/Syntax/AST/Expr.h',
      'src/Syntax/AST/IExprCompiler.h',
      'src/Syntax/AST/MessageExpr.h',
      'src/Syntax/AST/NameExpr.h',
      'src/Syntax/AST/NumberExpr.h',
      'src/Syntax/AST/ObjectExpr.h',
      'src/Syntax/AST/ReturnExpr.h',
      'src/Syntax/AST/SelfExpr.h',
      'src/Syntax/AST/SequenceExpr.h',
      'src/Syntax/AST/SetExpr.h',
      'src/Syntax/AST/StringExpr.h',
      'src/Syntax/AST/UndefineExpr.h',
      'src/Syntax/AST/VarExpr.h',
      'src/Syntax/FinchParser.cpp',
      'src/Syntax/FinchParser.h',
      'src/Syntax/ILineReader.h',
      'src/Syntax/ITokenSource.h',
      'src/Syntax/Lexer.cpp',
      'src/Syntax/Lexer.h',
      'src/Syntax/LineNormalizer.cpp',
      'src/Syntax/LineNormalizer.h',
      'src/Syntax/Parser.cpp',
      'src/Syntax/Parser.h',
      'src/Syntax/Token.cpp',
      'src/Syntax/Token.h',
    ],
  },
  'targets': [
    {
      'target_name': 'finch',
      'type': 'executable',
      'sources': [
        'src/main.cpp',
      ],
    },
    {
      'target_name': 'unit_tests',
      'type': 'executable',
      'defines': [ 'UNIT_TEST' ],
      'include_dirs': [
        'src/Test',
      ],
      'sources': [
        'src/Test/ArrayTests.cpp',
        'src/Test/ArrayTests.h',
        'src/Test/LexerTests.cpp',
        'src/Test/LexerTests.h',
        'src/Test/QueueTests.cpp',
        'src/Test/QueueTests.h',
        'src/Test/RefTests.cpp',
        'src/Test/RefTests.h',
        'src/Test/StackTests.cpp',
        'src/Test/StackTests.h',
        'src/Test/StringTests.cpp',
        'src/Test/StringTests.h',
        'src/Test/Test.cpp',
        'src/Test/Test.h',
        'src/Test/TestMain.cpp',
        'src/Test/TokenTests.cpp',
        'src/Test/TokenTests.h'
      ],
    },
  ],
}
